{"version":3,"sources":["components/Button.js","components/Editor.jsx","components/TodoPoint.js","components/TodoList.js","App.js","serviceWorker.js","index.js"],"names":["Button","onClick","e","preventDefault","_this$props","_this","props","name","this","react_default","a","createElement","className","Component","Editor","state","summary","data","details","onSummaryChange","setState","currentTarget","value","onDetailsChange","onSave","_this$props$data","id","made","detailedView","_this$state","todoPoint","edited","onTodoPointChange","onCancel","_this$props$data2","_this$state2","type","onChange","rows","Button_Button","TodoPoint","onCheck","actionType","Editor_Editor","checked","TodoList","todoList","newTodoList","Math","max","apply","Object","toConsumableArray","map","item","concat","filter","Error","_this2","renderedList","length","TodoPoint_TodoPoint","key","_this3","Fragment","renderList","App","TodoList_TodoList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4a1c41fd.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\nclass Button extends Component {\n  onClick = (e) => {\n    e.preventDefault();\n    const {name, onClick} = this.props;\n    onClick(name);\n  };\n  render() {\n    const {name} = this.props;\n    return <button className={\"btn\" + name} onClick={this.onClick} > {name} </button>;\n  }\n}\n\nexport {Button};","import React, { Component } from 'react';\nimport {Button} from './Button';\n\n\nclass Editor extends Component {\n  state = {\n    summary: this.props.data.summary,\n    details: this.props.data.details,\n  }\n  onSummaryChange = (e) => {\n    this.setState({summary: e.currentTarget.value});\n  }\n  onDetailsChange = (e) => {\n    this.setState({details: e.currentTarget.value});\n  }\n  onSave = () => {\n    const {id, made, detailedView} = this.props.data;\n    const {summary, details} = this.state;\n    const todoPoint = {\n      id,\n      made,\n      edited: false,\n      detailedView,\n      summary,\n      details,\n    }\n    this.props.onTodoPointChange('Save', todoPoint);\n  };\n  onCancel = () => {\n    const {id, made, detailedView, summary, details} = this.props.data;\n    const todoPoint = {\n      id,\n      made,\n      edited: false,\n      detailedView,\n      summary,\n      details,\n    }\n    this.props.onTodoPointChange('Cancel', todoPoint);\n  };\n  render() {\n    const {summary, details} = this.state;\n    return (\n      <form className=\"editor\">\n          <input type=\"text\" value={summary} className=\"summary\" onChange={this.onSummaryChange} /> \n          <textarea rows=\"3\" value={details} className=\"details\" onChange={this.onDetailsChange} />\n          <Button name=\"Save\" onClick={this.onSave}/>\n          <Button name=\"Cancel\" onClick={this.onCancel}/>\n      </form>\n    );\n  }\n}\n\nexport {Editor};\n","import React, { Component } from 'react';\nimport {Button} from './Button';\nimport {Editor} from './Editor.jsx';\n\n\nclass TodoPoint extends Component {\n  onCheck = () => {\n    this.props.onTodoPointChange('Made', this.props.data);\n  };\n  onClick = (actionType) => {\n    this.props.onTodoPointChange(actionType, this.props.data);\n  };\n  render() {\n    const {summary, details, made, edited, detailedView} = this.props.data;\n    if (edited) {\n      return <Editor data={this.props.data} onTodoPointChange={this.props.onTodoPointChange} />;\n    } else {\n      return (\n        <div className={made ? \"todoPoint made\" : \"todoPoint\" }>\n          <div className=\"summary\" >\n            <input type=\"checkbox\" checked={made} onChange={this.onCheck} /> \n            {summary} \n          </div>\n          {detailedView && <div className=\"details\"> {details} </div>}\n          <Button name=\"Details\" onClick={this.onClick}/>\n          <Button name=\"Edit\" onClick={this.onClick} />\n          <Button name=\"Delete\" onClick={this.onClick}/>\n        </div>\n      );\n    }\n  }\n}\n\nexport {TodoPoint};\n","import React, { Component } from 'react';\nimport {Button} from './Button';\nimport {TodoPoint} from './TodoPoint';\nimport todoList from '../data/todoList';\n\n\nclass TodoList extends Component {\n  state = {\n    todoList: todoList,\n  };\n  onTodoPointChange = (actionType, todoPoint) => {\n    const {todoList} = this.state;\n    let newTodoList;\n    switch (actionType) {\n      case 'Add':\n        const newId = Math.max(...todoList.map(item => item.id)) + 1;\n        const newPoint = {\n          id: newId,\n          made: false,\n          edited: true,\n          detailedView: false,\n          summary: \"\",\n          details: \"\",\n        };\n        newTodoList = [newPoint, ...todoList];\n        break;\n      case 'Details':\n        newTodoList = todoList.map(item => {\n          if (item.id === todoPoint.id) {\n            item.detailedView = !item.detailedView;\n          }\n          return item;\n        })\n        break;\n      case 'Made':\n        newTodoList = todoList.map(item => {\n          if (item.id === todoPoint.id) {\n            item.made = !item.made;\n          }\n          return item;\n        })\n        break;\n      case 'Edit':\n        newTodoList = todoList.map(item => {\n          if (item.id === todoPoint.id) {\n            item.edited = true;\n          }\n          return item;\n        })\n        break;\n      case 'Save':\n        if (todoPoint.summary === '') {\n          newTodoList = todoList;\n        } else {\n          newTodoList = todoList.map(item => {\n            if (item.id === todoPoint.id) {\n              return todoPoint;\n            }\n            return item;\n          })\n        }\n        break;\n      case 'Cancel':\n        if (todoPoint.summary !== '') {\n          newTodoList = todoList.map(item => {\n            if (item.id === todoPoint.id) {\n              return todoPoint;\n            }\n            return item;\n          })\n          break;\n        }\n      case 'Delete':\n        newTodoList = todoList.filter(item => {\n          return item.id !== todoPoint.id;\n        })\n        break;\n      default:\n      throw new Error('Unexpected action type');\n    }\n    //debugger;\n    this.setState({todoList: newTodoList});\n  }\n  renderList() {\n    const {todoList} = this.state;\n    let renderedList = [];\n    if (todoList.length) {\n      renderedList = todoList.map(item => (\n      <TodoPoint key={item.id} data={item} onTodoPointChange={this.onTodoPointChange}/>\n      )\n    )}\n    return renderedList;\n  }\n  render() {\n    return (\n      <React.Fragment>  \n        <h1> TODO-list: </h1>\n        <Button name=\"Add\" onClick={() => this.onTodoPointChange('Add')} />\n        {this.renderList()}\n      </React.Fragment>\n    );\n  }\n}\n\nexport {TodoList};\n","import React, { Component } from 'react';\nimport {TodoList} from './components/TodoList';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <TodoList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}